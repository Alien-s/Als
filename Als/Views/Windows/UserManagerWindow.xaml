<Window x:Class="Als.Views.Windows.UserManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dict="clr-namespace:Als.Resources.Dictionaries"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:local="clr-namespace:Als.Views.Windows"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        DataContext="{Binding UserManagerWindowVewModel, Source={StaticResource Locator}}"
        Title="{x:Static dict:UserManagerWindowDict.Title}" Height="530" Width="800" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadUserManagerWindowCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <GroupBox Grid.Column="0" Margin="10">
            <GroupBox.Header>
                <TextBlock Text="{x:Static dict:UserManagerWindowDict.Users}" FontWeight="Bold"/>
            </GroupBox.Header>

            <DockPanel>
                <DockPanel DockPanel.Dock="Top" Margin="10,10,10,0">
                    <Button Margin="3,0,0,0" Command="{Binding ClearFilterCommand}" DockPanel.Dock="Right" Background="AliceBlue">
                        <Button.Content>
                            <fa:ImageAwesome Height="16" Icon="Solid_Broom" Foreground="DarkOrange" ToolTip="Clear filter"/>
                        </Button.Content>
                    </Button>
                    <fa:ImageAwesome Height="20" Icon="Brands_Searchengin" Foreground= "OrangeRed" Margin="0,0,3,0"/>
                    <TextBox Style="{StaticResource txtBoxDefaultStyle}" Margin="0" IsReadOnly="False" Text="{Binding ItemsFilterText, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>

                <DataGrid x:Name="listOfUsersDataGrid" 
                          Margin="10,5" FontSize="12"
                          ItemsSource="{Binding SelectedItems}" 
                          SelectedItem="{Binding Path=SelectedUser, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          HeadersVisibility="Column"
                          AlternatingRowBackground="AliceBlue" 
                          Background="White"
                          GridLinesVisibility="Horizontal"
                          HorizontalGridLinesBrush="AliceBlue"
                          AutoGenerateColumns="False"
                          CanUserReorderColumns="False"
                          CanUserSortColumns="True"
                          CanUserResizeRows="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          IsReadOnly="True"
                          EnableRowVirtualization="True"
                          VirtualizingPanel.IsContainerVirtualizable="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling">

                    <DataGrid.Columns>
                        <DataGridTextColumn Width="50" Header="{x:Static dict:UserManagerWindowDict.Id}" Binding="{Binding Id}"/>
                        <DataGridTextColumn Width="*" Header="{x:Static dict:UserManagerWindowDict.Firstname}" Binding="{Binding Name}"/>
                        <DataGridTextColumn Width="*" Header="{x:Static dict:UserManagerWindowDict.Surname}" Binding="{Binding Surname}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
        
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Margin="10">
                <GroupBox.Header>
                    <TextBlock Text="{Binding UserMode}" FontWeight="Bold"/>
                </GroupBox.Header>
                <DockPanel>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static dict:UserManagerWindowDict.Login}"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static dict:UserManagerWindowDict.Password}"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="{x:Static dict:UserManagerWindowDict.Firstname}"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="{x:Static dict:UserManagerWindowDict.Surname}"/>
                        <TextBlock Grid.Column="0" Grid.Row="4" Text="{x:Static dict:UserManagerWindowDict.Patronymic}"/>
                        <TextBlock Grid.Column="0" Grid.Row="5" Text="{x:Static dict:UserManagerWindowDict.Email}"/>
                        <TextBlock Grid.Column="0" Grid.Row="6" Text="{x:Static dict:UserManagerWindowDict.Handy}"/>
                        <TextBlock Grid.Column="0" Grid.Row="7" Text="{x:Static dict:UserManagerWindowDict.Phone}"/>
                        <TextBlock Grid.Column="0" Grid.Row="8" Text="{x:Static dict:UserManagerWindowDict.Position}"/>
                        <TextBlock Grid.Column="0" Grid.Row="9" Text="{x:Static dict:UserManagerWindowDict.Role}"/>

                        <TextBox x:Name="txtNewUserLogin" 
                                 Grid.Column="1" Grid.Row="0" 
                                 Style="{DynamicResource txtFocusableStyle}" 
                                 Text="{Binding SelectedUser.Login, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="1" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}"
                                 Text="{Binding SelectedUser.Password, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="2" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}" 
                                 Text="{Binding SelectedUser.Name, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="3" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}" 
                                 Text="{Binding SelectedUser.Surname, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="4" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}" 
                                 Text="{Binding SelectedUser.Patronymic, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="5" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}" 
                                 Text="{Binding SelectedUser.Email, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="6" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}" 
                                 Text="{Binding SelectedUser.Handy, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Column="1" Grid.Row="7" 
                                 Style="{DynamicResource txtEditModeTriggerStyle}" 
                                 Text="{Binding SelectedUser.Phone, UpdateSourceTrigger=PropertyChanged}"/>

                        <ComboBox Style="{DynamicResource cmbCollapsedModeTriggerStyle}" 
                                  Grid.Column="1" Grid.Row="8" 
                                  ItemsSource="{Binding PositionCollection}" 
                                  SelectedItem="{Binding SelectedUser.Position, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource TextBlockAtComboBox}" 
                                               Text="{Binding Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBox x:Name="txt" Grid.Column="1" Grid.Row="8" 
                                 Style="{DynamicResource txtHidenModeTriggerStyle}" Text="{Binding SelectedUser.Position.Name}"/>

                        <ComboBox Grid.Column="1" Grid.Row="9" 
                                  Style="{DynamicResource cmbCollapsedModeTriggerStyle}" 
                                  ItemsSource="{Binding RoleCollection}" 
                                  SelectedItem="{Binding SelectedUser.Role, UpdateSourceTrigger=PropertyChanged}">

                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource TextBlockAtComboBox}" 
                                               Text="{Binding Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBox Grid.Column="1" Grid.Row="9" Style="{DynamicResource txtHidenModeTriggerStyle}" Text="{Binding SelectedUser.Role.Name}"/>
                    </Grid>

                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal"  HorizontalAlignment="Right">

                        <Button Style="{DynamicResource btnCollapsedModeTriggerStyle}" Content="{x:Static dict:UserManagerWindowDict.ButtonDelete}" Command="{Binding RemoveUserCommand}"/>

                        <Button Style="{DynamicResource btnCollapsedModeTriggerStyle}" Content="{x:Static dict:UserManagerWindowDict.ButtonAdd}" Command="{Binding AddNewUserCommand}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction TargetName="chkEditModeControl" PropertyName="IsChecked" Value="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button Style="{DynamicResource btnCollapsedModeTriggerStyle}" Content="{x:Static dict:UserManagerWindowDict.ButtonEdit}" Command="{Binding EditUserCommand}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction TargetName="chkEditModeControl" PropertyName="IsChecked" Value="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button Style="{DynamicResource btnVisibleModeTriggerStyle}" Content="{x:Static dict:UserManagerWindowDict.ButtonSave}" Command="{Binding SaveChangingsByUserCommand}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction TargetName="chkEditModeControl" PropertyName="IsChecked" Value="False"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button Style="{DynamicResource btnVisibleModeTriggerStyle}" Content="{x:Static dict:UserManagerWindowDict.ButtonCancel}" Command="{Binding CancelOfUserEditModeCommand}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction TargetName="chkEditModeControl" PropertyName="IsChecked" Value="False"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </StackPanel>
                </DockPanel>
            </GroupBox>

            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10">
                <CheckBox x:Name="chkEditModeControl" Content="EditModeControl" Visibility="Hidden" VerticalAlignment="Center"/>
                <Button Style="{StaticResource btnDefaultStyle}" Content="{x:Static dict:UserManagerWindowDict.ButtonClose}" IsCancel="True"/>
            </StackPanel>

        </Grid>
    </Grid>
</Window>
